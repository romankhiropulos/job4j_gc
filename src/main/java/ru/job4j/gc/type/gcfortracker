Приложение job4j_tracker является простым однопоточным консольным приложением с хранением данных
в оперативной памяти(StartUI.java, MemTracker.java), поэтому оно не требовательно по части объема heap,
мощности процессора и наличии в нем нескольких ядер.
Для работы приложения job4j_tracker будет вполне достаточно использовать в качестве
сборщика мусора Serial GC. Данный GC выполняет свою работу последовательно в одном потоке, прост в
реализации, а главный недостаток - долгие паузы на сборку мусора, в таком приложении, как job4j_tracker,
вряд ли дадут о себе знать.

Какой тип сборщика будет оптимален для серверного приложения?
Серверные приложения это многопоточные приложения, так как к серверу одновременно может обращаться
большое количество пользователей. Для коммерческих серверных приложений обычно выделяют серьезные
процессорные мощности и большие объемы оперативной памяти для ускорения отклика приложения, для
возможности параллельных вычислений. Здесь может оказаться эффективным использование
сборщика мусора G1. G1 выбран сборщиком мусора по-умолчанию в современных версиях HotSpot JVM.
Он изначально позиционировался как сборщик для приложений с большими кучами (от 4 ГБ и выше), для которых
важно сохранять время отклика небольшим и предсказуемым, пусть даже за счет уменьшения пропускной
способности. G1 в сравнении с предшественником GC CMS лучше распределяет сборки во времени,
чтобы не допустить длительных остановок приложения, особенно при больших размерах кучи, что очень хорошо
для работы серверного приложения.